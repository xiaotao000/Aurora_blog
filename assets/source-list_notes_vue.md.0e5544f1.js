import{_ as e,c as o,o as r,N as a}from"./chunks/framework.01b322b0.js";const b=JSON.parse('{"title":"Vue相关","description":"","frontmatter":{},"headers":[],"relativePath":"source-list/notes/vue.md"}'),t={name:"source-list/notes/vue.md"},c=a('<h1 id="vue相关" tabindex="-1">Vue相关 <a class="header-anchor" href="#vue相关" aria-label="Permalink to &quot;Vue相关&quot;">​</a></h1><h2 id="ui-库" tabindex="-1">UI 库 <a class="header-anchor" href="#ui-库" aria-label="Permalink to &quot;UI 库&quot;">​</a></h2><ol><li><a href="https://element.eleme.io/#/zh-CN" target="_blank" rel="noreferrer">Element</a> <code>Element</code>，一套为开发者、设计师和产品经理准备的基于 <code>Vue 2.0</code> 的桌面端组件库</li><li><a href="https://element-plus.gitee.io/zh-CN/" target="_blank" rel="noreferrer">Element Plus</a> <code>Element Plus</code> 基于 <code>Vue 3</code>，面向设计师和开发者的组件库</li><li><a href="https://www.creative-tim.com/product/vuetify-material-dashboard" target="_blank" rel="noreferrer">Vuetify</a> <code>Vuetify</code>材料仪表板-开源材料设计由Creative Tim管理</li><li><a href="https://vant-ui.github.io/vant/#/zh-CN/home" target="_blank" rel="noreferrer">Vant</a> <code>Vant</code> 是一套轻量、可靠的移动端组件库。通过 <code>Vant</code>，可以快速搭建出风格统一的页面，提升开发效率，支持 <code>Vue 3</code>。</li><li><a href="https://didi.github.io/cube-ui/#/zh-CN" target="_blank" rel="noreferrer">Cube-UI</a> 基于 <code>Vue.js</code> 实现的精致移动端组件库</li><li><a href="https://didi.github.io/mand-mobile/#/zh-CN/home" target="_blank" rel="noreferrer">Mand-Mobile</a> 打造面向金融场景的 Vue 移动端 UI 组件库，灵活快速、丰富实用；用于敏捷搭建差异化的金融类产品，力求让复杂场景变得简单，辅助用户认知提效。</li><li><a href="https://nutui.jd.com/#/" target="_blank" rel="noreferrer">NutUI</a> 京东风格的轻量级移动端组件库</li><li><a href="https://vuetifyjs.com/en/" target="_blank" rel="noreferrer">Vuetify</a> <code>Vuetify</code> 是一个基于 <code>Vue.js</code> 精心打造 <code>UI</code> 组件库，整套 <code>UI</code> 设计为 <code>Material</code> 风格。能够让没有任何设计技能的开发者创造出时尚的 <code>Material</code> 风格界面。</li><li><a href="https://www.naiveui.com/zh-CN/os-theme" target="_blank" rel="noreferrer">Naive UI</a> <code>Naive UI</code> 是一款基于当前比较新的 <code>Vue 3.0/TypeScript</code> 技栈开发的前端 <code>UI</code> 组件库。</li></ol><h2 id="状态管理" tabindex="-1">状态管理 <a class="header-anchor" href="#状态管理" aria-label="Permalink to &quot;状态管理&quot;">​</a></h2><ol><li><a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noreferrer">Vuex</a> <code>Vuex</code> 是一个专为 <code>Vue.js</code> 应用程序开发的状态管理模式 + 库。</li><li><a href="https://pinia.vuejs.org/zh/" target="_blank" rel="noreferrer">Pinia</a> <code>Pinia</code> 其目的是设计一个拥有组合式 API 的 <code>Vue</code> 状态管理库。</li><li>[vuex-persist] (<a href="https://championswimmer.in/vuex-persist/" target="_blank" rel="noreferrer">https://championswimmer.in/vuex-persist/</a>) <code>vuex-persistedstate</code> 是一个支持 <code>Typescript</code> 的<code>Vuex</code>插件，使你能够将应用程序的状态保存到持久存储中，例如 <code>Cookies</code> 或 <code>localStorage。</code></li></ol><h2 id="表单库" tabindex="-1">表单库 <a class="header-anchor" href="#表单库" aria-label="Permalink to &quot;表单库&quot;">​</a></h2><ol><li><a href="https://vee-validate.logaretm.com/v4" target="_blank" rel="noreferrer">VeeValidate</a> <code>vee-validate</code> 是<code>Vue.js</code>的表单验证库，它允许验证输入并以熟悉的声明式样式或使用组合函数构建更好的表单 UI。</li><li><a href="https://form.making.link/#/zh-CN/" target="_blank" rel="noreferrer">vue-form-making</a> <code>vue-form-making</code> 是一个基于 <code>vue</code> 和 <code>element-ui</code> 实现的可视化表单设计器，使用了最新的前端技术栈，内置了 i18n 国际化解决方案，可以让表单开发简单而高效。</li><li><a href="https://formkit.com/" target="_blank" rel="noreferrer">FormKit</a> <code>FormKit</code> 是一个面向 <code>Vue</code> 开发人员的表单创作框架，它使构建高质量的生产就绪表单的速度提高了 10 倍。</li></ol><h2 id="文档库" tabindex="-1">文档库 <a class="header-anchor" href="#文档库" aria-label="Permalink to &quot;文档库&quot;">​</a></h2><ol><li><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a> VitePress 是 <code>VuePress</code> 的继承者，建立在<code>vite</code> 之上。目前，正处于alpha阶段。它已经适合开箱即用的文档使用，但配置和主题 <code>API</code> 可能仍会在次要版本之间发生变化。</li><li><a href="https://v2.vuepress.vuejs.org/" target="_blank" rel="noreferrer">VuePress</a> <code>VuePress</code> 是一个基于 <code>Vue</code> 的轻量级静态网站生成器，以及为编写技术文档而优化的默认主题。 它是为了满足 <code>Vue</code> 自己的子项目文档的需求而创建的。</li><li><a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noreferrer">Gridsome</a> <code>Gridsome</code> 是一个基于 <code>Vue.js</code> 构建的 <code>Jamstack</code> 框架，它让开发人员可以轻松地构建静态生成的网站和应用程序，这些网站和应用程序天生速度快。</li><li><a href="https://vitest.dev/" target="_blank" rel="noreferrer">Vitest</a> <code>Vitest</code> 是一个由 <code>Vite</code> 提供支持的极速单元测试框架。其和 <code>Vite</code> 的配置、转换器、解析器和插件保持一致，具有开箱即用的 <code>TypeScript / JSX</code> 支持。</li></ol><h2 id="可视化" tabindex="-1">可视化 <a class="header-anchor" href="#可视化" aria-label="Permalink to &quot;可视化&quot;">​</a></h2><ol><li><a href="https://vue-chartjs.org/" target="_blank" rel="noreferrer">Vue ChartJS</a> <code>vue-chartjs</code> 是一个 <code>Vue</code> 对于 <code>Chart.js</code> 的封装，让用户可以在<code>Vue</code>中轻松使用<code>Chart.js</code>，很简单的创建可复用的图表组件，非常适合需要简单的图表并尽可能快地运行的人。 <code>vue-chartjs</code>抽象了基本逻辑，同时也暴露了<code>Chart.js</code>对象，让用户获得最大的灵活性。它支持 <code>Vue 3</code> 和<code>Vue 2</code>。</li><li><a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="noreferrer">Apache ECharts</a> <code>Apache ECharts</code> 是一款基于<code>Javascript</code>的数据可视化图表库，提供直观，生动，可交互，可个性化定制的数据可视化图表。它是用纯 <code>JavaScript</code> 编写的，基于<code>zrender</code>，是一个全新的轻量级画布库!</li><li><a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noreferrer">Vue-ECharts</a> <code>Vue-ECharts</code> 是 <code>Apache ECharts</code> 的 <code>Vue.js</code> 组件。使用 <code>Apache ECharts</code>，同时支持<code> Vue.js 2/3</code>。</li><li><a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noreferrer">Trois</a> <code>Trois</code> 是一个基于 <code>Three.JS</code> 的 <code>Vue 3</code> 可视化库，它是一个流行的 <code>WebGL</code> 库。 <code>Three.JS</code> 对桌面和移动设备都有很好的支持。 该库允许我们使用 <code>VueJS</code> 组件轻松为网站创建 <code>3D</code> 效果。</li></ol><h2 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h2><ol><li><a href="https://jbaysolutions.github.io/vue-grid-layout/" target="_blank" rel="noreferrer">Vue Grid Layout</a> <code>vue-grid-layout</code> 是一个网格布局系统，类似于 <code>Gridster</code>，用于 <code>Vue.js</code>。</li><li><a href="https://sortablejs.github.io/Vue.Draggable/#/simple" target="_blank" rel="noreferrer">Vue Draggable</a> <code>Vue Draggable</code> 是一个基于 <code>Sortable.js</code> 的 <code>Vue</code> 拖拽组件。</li><li><a href="https://pulsardev.github.io/vue-tour/" target="_blank" rel="noreferrer">Vue Tour</a> <code>Vue Tour</code> 是一个轻量级、简单且可定制的导览插件，可与 <code>Vue.js</code> 一起使用。它提供了一种快速简便的方法来指导用户完成你的应用程序。</li><li><a href="https://swiperjs.com/" target="_blank" rel="noreferrer">Swiper.js</a> <code>Swiper</code> 是一款免费以及轻量级的移动设备触控滑块的框架，使用硬件加速过渡。主要使用与移动端的网站、网页应用程序，以及原生的应用程序。</li><li><a href="https://happy-coding-clans.github.io/vue-easytable/#/en/demo" target="_blank" rel="noreferrer">vue-easytable</a> 该库提供了一个功能齐全且高度可定制的表格组件/数据网格。它支持许多功能，如虚拟滚动、列固定、标题固定、标题分组、过滤器、排序、单元格省略号、行扩展、行复选框等。</li></ol><h2 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h2><ol><li><a href="https://animate.style/" target="_blank" rel="noreferrer">Animate.css</a> <code>animate.css</code> 是一个使用<code>CSS3</code>的<code>animation</code>制作的动画效果的<code>CSS</code>集合，里面预设了很多种常用的动画，且使用非常简单。</li><li><a href="https://greensock.com/" target="_blank" rel="noreferrer">Greensock</a> <code>GreenSock</code>是一个<code>JavaScript</code>动画库，可轻松对<code>HTML</code>元素进行动画处理。 用于创建高性能，零依赖性，跨浏览器动画，声称在超过 400 万个网站中使用。</li><li><a href="https://popmotion.io/" target="_blank" rel="noreferrer">Popmotion</a> <code>Popmotion</code> 是一个只有<code>12KB</code>的 <code>JavaScript</code> 运动引擎，可以用来实现动画，物理效果和输入跟踪。原生的<code>DOM</code>支持：<code>CSS，SVG，SVG</code>路径和<code>DOM</code>属性的支持，开箱即用。</li><li><a href="https://github.com/Aminerman/vue-kinesis" target="_blank" rel="noreferrer">Vue Kinesis</a> <code>Vue Kinesis</code> 支持使用 <code>Vue.js</code> 轻松创建复杂的交互式动画，其支持<code>Vue 3</code>。</li></ol><h2 id="图标" tabindex="-1">图标 <a class="header-anchor" href="#图标" aria-label="Permalink to &quot;图标&quot;">​</a></h2><ol><li><a href="https://iconpark.oceanengine.com/home" target="_blank" rel="noreferrer">IconPark</a> IconPark 提供超过 2400 个高质量图标，还提供了每个图标的含义和来源的描述，便于开发者使用。除此之外，该网站还可以自定义图标，这是与其他图标网站与众不同的地方。该图标库是字节跳动旗下的技术驱动图标样式的开源图标库。</li><li><a href="https://fontawesome.com/" target="_blank" rel="noreferrer">Font Awesome</a> <code>Font Awesome</code> 提供了可缩放的矢量图标，可以使用CSS所提供的所有特性对它们进行更改，包括：大小、颜色、阴影或者其它任何支持的效果。</li><li><a href="https://ionic.io/ionicons/" target="_blank" rel="noreferrer">Ionicons</a> <code>Ionicons</code> 是一个完全开源的图标集，是知名混合开发框架 <code>Ionic Framework</code> 内置的图标库，包含 <code>1300</code> 个设计优雅、风格统一的高质量图标，能满足大多数的业务场景。</li><li><a href="https://icons.getbootstrap.com/" target="_blank" rel="noreferrer">Bootstrap Icons</a> <code>Bootstrap Icons</code> 是 <code>Bootstrap</code> 开源的 <code>SVG</code> 图标库，此图标库起初专门针对其组件（从表单控件到导航）和文档进行定制设计和构建，现在可以免费用于任何项目。</li></ol><h2 id="富文本编辑器" tabindex="-1">富文本编辑器 <a class="header-anchor" href="#富文本编辑器" aria-label="Permalink to &quot;富文本编辑器&quot;">​</a></h2><ol><li><a href="https://tiptap.dev/" target="_blank" rel="noreferrer">Tiptap</a> <code>Tiptap</code> 是一个基于 <code>Vue</code> 的无渲染的富文本编辑器，它基于 <code>Prosemirror</code>，完全可扩展且无渲染。可以轻松地将自定义节点添加为<code>Vue</code>组件。使用无渲染组件（函数式组件），几乎完全控制标记和样式。菜单的外观或在DOM中的显示位置。这完全取决于使用者。</li><li><a href="https://quilljs.com/" target="_blank" rel="noreferrer">VuQuill.jsex</a> <code>Quill.js</code> 是一个具有跨平台和跨浏览器支持的富文本编辑器。凭借其可扩展架构和富有表现力的 <code>API</code>，可以完全自定义它以满足个性化的需求。</li><li><a href="https://www.tiny.cloud/" target="_blank" rel="noreferrer">TinyMCE</a> <code>TinyMCE</code> 是一个热门的富文本编辑器。它的目标是帮助其他开发人员构建精美的 Web 内容解决方案。它易于集成，可以部署在基于云的、自托管或混合环境中。该设置使得合并诸如 <code>Angular</code>、<code>React</code> 和 <code>Vue</code> 等框架成为可能。它还可以使用 <code>50</code> 多个插件进行扩展，每个插件都有 <code>100</code> 多个自定义选项。</li><li><a href="https://ckeditor.com/ckeditor-5/" target="_blank" rel="noreferrer">CKEditor 5</a> <code>CKEditor</code> 是一个强大的富文本编辑器框架，具有模块化架构、现代集成和协作编辑等功能。它可以通过基于插件的架构进行扩展，从而可以将必要的内容处理功能引入。它是在 <code>ES6</code> 中从头开始编写的，并且具有出色的 <code>webpack</code>支持。可以使用与<code>Angular</code>、<code>React</code>和<code>Vue.js</code>的原生集成。</li></ol><h2 id="构建工具" tabindex="-1">构建工具 <a class="header-anchor" href="#构建工具" aria-label="Permalink to &quot;构建工具&quot;">​</a></h2><ol><li><a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a> <code>Vite</code> 是下一代前端开发与构建工具。 <code>Vite</code> 意在提供开箱即用的配置，同时它的插件 <code>API</code> 和 <code>JavaScript API</code> 带来了高度的可扩展性，并有完整的类型支持。</li><li><a href="https://webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> <code>webpack</code> 是一个用于现代JavaScript应用程序的静态模块打包工具。当 <code>webpack</code> 处理应用程序时，它会在内部构建一个依赖图(dependency graph)，此依赖图对应映射到项目所需的每个模块，并生成一个或多个 <code>bundle</code>。</li></ol>',21),d=[c];function i(l,n,s,h,u,f){return r(),o("div",null,d)}const m=e(t,[["render",i]]);export{b as __pageData,m as default};
